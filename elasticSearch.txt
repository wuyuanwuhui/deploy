elastic search

yum search java | grep -i --color JDK

yum install java-latest-openjdk.x86_64

注意：不能以root用户运行elasticsearch

groupadd es
useradd -g es elasticSearch

/etc/group文件包含所有组
/etc/shadow和/etc/passwd系统存在的所有用户名
cat /etc/group


chown elasticSearch:es -R elasticsearch  

su elasticSearch
/vagrant/elasticsearch/bin/elasticsearch -d -p /vagrant/elasticsearch/pid

开机启动：脚本

curl http://localhost:9200/
curl 'localhost:9300'


./elasticsearch-plugin install mobz/elasticsearch-head  

composer require --prefer-dist yiisoft/yii2-elasticsearch
composer require --prefer-dist yiisoft/yii2-elasticsearch:"~2.0.0"

"yiisoft/yii2-elasticsearch": "~2.0.0"


curl -X GET "http://localhost:9200/_cat/health?v"

curl -X GET "localhost:9200/_cat/nodes?v"

curl -X GET "localhost:9200/_cat/indices?v"

# create index
curl -X PUT "localhost:9200/customer?pretty"

# get index
curl -X GET "localhost:9200/_cat/indices?v"

# create doc
curl -X PUT "localhost:9200/customer/_doc/1?pretty" -H 'Content-Type: application/json' -d'{"name": "John Doe", "age" : 21, "sex":"male"}'

curl -X PUT "localhost:9200/customer/_doc/2?pretty" -H 'Content-Type: application/json' -d'{"name": "White", "age" : 31, "sex":"male"}'

# get doc
curl -X GET "localhost:9200/customer/_doc/1?pretty"

#del index
curl -X DELETE "localhost:9200/customer?pretty"
#del doc
curl -X DELETE "localhost:9200/customer/_doc/1?pretty"

#update doc
curl -X POST "localhost:9200/customer/_doc/1/_update?pretty" -H 'Content-Type: application/json' -d'
{
  "doc": {"age": 32 }
}
'
# use script
curl -X POST "localhost:9200/customer/_doc/1/_update?pretty" -H 'Content-Type: application/json' -d'
{
  "script" : "ctx._source.age += 5"
}
'

#
golang + elastic search


向Elasticsearch发出的请求的组成部分与其它普通的HTTP请求是一样的：
```bash
curl -X<VERB> '<PROTOCOL>://<HOST>:<PORT>/<PATH>?<QUERY_STRING>' -d '<BODY>'
```
--------------------------------------------------
- VERB         HTTP方法：`GET`, `POST`, `PUT`, `HEAD`, `DELETE`
- PROTOCOL     http或者https协议（只有在Elasticsearch前面有https代理的时候可用）
- HOST         Elasticsearch集群中的任何一个节点的主机名，如果是在本地的节点，那么就叫localhost
- PORT         Elasticsearch HTTP服务所在的端口，默认为9200
- PATH         API路径（例如_count将返回集群中文档的数量），PATH可以包含多个组件，例如_cluster/stats或者_nodes/stats/jvm
- QUERY_STRING 一些可选的查询请求参数，例如`?pretty`参数将使请求返回更加美观易读的JSON数据
- BODY         一个JSON格式的请求主体（如果请求需要的话）

举例说明，为了计算集群中的文档数量，我们可以这样做：

```Javascript
curl -XGET 'http://localhost:9200/_count?pretty' -d '
{
    "query": {
        "match_all": {}
    }
}
'

